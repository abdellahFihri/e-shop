{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\abdel\\\\Desktop\\\\jsx\\\\fihri-e-shop\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionType from './cart.types';\nconst INITIAL_STATE = {\n  hidden: true\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionType.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden //will switch between booleans\n\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/abdel/Desktop/jsx/fihri-e-shop/src/redux/cart/cart.reducer.js"],"names":["CartActionType","INITIAL_STATE","hidden","cartReducer","state","action","type","TOGGLE_CART_HIDDEN"],"mappings":";;;;;;AAAA,OAAOA,cAAP,MAA2B,cAA3B;AACA,MAAMC,aAAa,GAAC;AAChBC,EAAAA,MAAM,EAAC;AADS,CAApB;;AAIA,MAAMC,WAAW,GAAC,CAACC,KAAK,GAACH,aAAP,EAAqBI,MAArB,KAA8B;AAE5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,cAAc,CAACO,kBAApB;AACI,+BACOH,KADP;AAEIF,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF,MAFnB,CAE2B;;AAF3B;;AAIA;AACI,aAAOE,KAAP;AAPZ;AASH,CAXD;;AAYC,eAAeD,WAAf","sourcesContent":["import CartActionType from './cart.types'\r\nconst INITIAL_STATE={\r\n    hidden:true\r\n}\r\n\r\nconst cartReducer=(state=INITIAL_STATE,action)=>{\r\n\r\n    switch(action.type){\r\n        case CartActionType.TOGGLE_CART_HIDDEN:\r\n            return{\r\n                ...state,\r\n                hidden: !state.hidden  //will switch between booleans\r\n            }\r\n            default:\r\n                return state\r\n    }\r\n}\r\n export default cartReducer"]},"metadata":{},"sourceType":"module"}