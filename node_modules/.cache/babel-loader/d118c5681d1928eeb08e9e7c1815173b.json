{"ast":null,"code":"import firebase from 'firebase/app'; // allways import firebase then the scripts you need\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAKZ0Dgq5oxNHrW-LPhMMV_Tw-kpbRfGzo\",\n  authDomain: \"fihri-e-shop.firebaseapp.com\",\n  databaseURL: \"https://fihri-e-shop.firebaseio.com\",\n  projectId: \"fihri-e-shop\",\n  storageBucket: \"fihri-e-shop.appspot.com\",\n  messagingSenderId: \"389040575267\",\n  appId: \"1:389040575267:web:0bd977a2af1a82dd153296\",\n  measurementId: \"G-S0K7DGSYHJ\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //no user auth will just return(do nothing)\n\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid)); // this gets all the object of the user will generate each uid of th user that sign in with google\n\n  const snapShot = await userRef.get(); // pass it into a snapshot with await(snapshot gets us onlty a representation of data no CRUD)\n\n  if (!snapShot.exists) {\n    // will check the exists property which is a boolean \n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n  }\n\n  console.log('snapshot: ', snapShot);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider); //import in sign in n use as a button\n\nexport default firebase;","map":{"version":3,"sources":["C:/Users/abdel/desktop/jsx/fihri-e-shop/src/firebase/firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","console","log","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB,C,CAAoC;;AACpC,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,8BAFH;AAGTC,EAAAA,WAAW,EAAE,qCAHJ;AAITC,EAAAA,SAAS,EAAE,cAJF;AAKTC,EAAAA,aAAa,EAAE,0BALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAWET,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAC,OAAOC,QAAP,EAAgBC,cAAhB,KAAiC;AACtE,MAAI,CAACD,QAAL,EAAc,OADwD,CACjD;;AAErB,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAd,CAHsE,CAGjB;;AACrD,QAAMC,QAAQ,GAAE,MAAMJ,OAAO,CAACK,GAAR,EAAtB,CAJsE,CAIlC;;AAEpC,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAC;AAAD,UAClBC,WADkB,GACCT,QADD,CAClBS,WADkB;AAAA,UACNC,KADM,GACCV,QADD,CACNU,KADM;AAEnB;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAb,EAA0BN,QAA1B;AACD,CAVM;AAYP,OAAO,MAAMO,IAAI,GAACzB,QAAQ,CAACyB,IAAT,EAAX;AACP,OAAQ,MAAMV,SAAS,GAAEf,QAAQ,CAACe,SAAT,EAAjB;AAER,MAAMW,QAAQ,GAAG,IAAI1B,QAAQ,CAACyB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAC,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA5B,C,CAA0D;;AAEjE,eAAe1B,QAAf","sourcesContent":["import firebase from 'firebase/app' // allways import firebase then the scripts you need\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyAKZ0Dgq5oxNHrW-LPhMMV_Tw-kpbRfGzo\",\r\n    authDomain: \"fihri-e-shop.firebaseapp.com\",\r\n    databaseURL: \"https://fihri-e-shop.firebaseio.com\",\r\n    projectId: \"fihri-e-shop\",\r\n    storageBucket: \"fihri-e-shop.appspot.com\",\r\n    messagingSenderId: \"389040575267\",\r\n    appId: \"1:389040575267:web:0bd977a2af1a82dd153296\",\r\n    measurementId: \"G-S0K7DGSYHJ\"\r\n  }\r\n\r\n  firebase.initializeApp(config)\r\n\r\n  export const createUserProfileDocument=async (userAuth,additionalData)=>{\r\n    if (!userAuth)return;//no user auth will just return(do nothing)\r\n\r\n    const userRef=firestore.doc(`users/${userAuth.uid}`) // this gets all the object of the user will generate each uid of th user that sign in with google\r\n    const snapShot= await userRef.get() // pass it into a snapshot with await(snapshot gets us onlty a representation of data no CRUD)\r\n\r\n    if(!snapShot.exists){// will check the exists property which is a boolean \r\nconst{displayName,email}=userAuth\r\n    }\r\n    console.log( 'snapshot: ',snapShot)\r\n  }\r\n\r\n  export const auth=firebase.auth()\r\n  export  const firestore =firebase.firestore()\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider()\r\n  provider.setCustomParameters({prompt:'select_account'})\r\n\r\n  export const signInWithGoogle=()=> auth.signInWithPopup(provider)//import in sign in n use as a button\r\n\r\n  export default firebase\r\n"]},"metadata":{},"sourceType":"module"}